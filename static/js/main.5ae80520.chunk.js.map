{"version":3,"sources":["context/widget.ts","components/widget/components/content/note/index.tsx","components/widget/components/content/quote/index.tsx","hooks/useInterval.ts","components/widget/components/content/clock/index.tsx","components/widget/components/content/emoji/index.tsx","components/widget/components/content/index.tsx","components/widget/components/header/index.tsx","context/size.tsx","components/widget/components/frame/index.tsx","components/widget/index.tsx","data/widgetModel.ts","utils/storage.ts","components/app.tsx","data/widgetStore.ts","index.tsx"],"names":["WidgetContext","createContext","useWidget","widget","useContext","Error","observer","style","backgroundColor","fontFamily","color","border","resize","width","height","padding","margin","outline","value","content","data","onChange","event","setContentData","currentTarget","lastRequested","quote","isStale","Date","now","useEffect","fetch","then","response","ok","json","Promise","reject","author","catch","console","warn","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","EN_US","FORMAT_OPTIONS","weekday","day","year","month","hour","minute","second","parseDate","date","dateString","toLocaleString","split","lastIndexOf","substring","time","trim","Clock","useState","setDatetime","className","EMOJIS","Array","from","getRandomEmoji","Math","floor","random","length","WIDGET_CONTENT_MAP","note","Note","Quote","clock","emoji","setEmoji","onClick","display","justifyContent","alignItems","cursor","fontSize","userSelect","Component","type","HeaderButton","children","onMouseDown","e","stopPropagation","mouseDown","setMouseDown","inputId","title","document","activeElement","preventDefault","onMouseUp","focus","setContentTitle","onBlur","toUpperCase","slice","maxLength","disabled","toggleFullScreen","delete","getSize","window","innerWidth","innerHeight","SizeContext","SizeProvider","windowSize","setWindowSize","onResize","addEventListener","removeEventListener","Provider","position","size","nodeRef","x","w","max","y","h","min","setSize","setPosition","pos","isFullScreen","dim","bounds","handle","onDrag","_","setActive","ref","minConstraints","_event","WidgetModel","store","isSoftDeleted","setActiveWidget","shouldSoftDelete","removeWidget","restore","toJSON","this","makeAutoObservable","includes","defaults","v4","STORAGE_KEY","getWidgets","JSON","parse","localStorage","getItem","setWidgets","setItem","log","listen","key","widgetStore","widgets","addNote","addNew","addQuote","restoreOrAddNew","addClock","addEmoji","index","findIndex","push","splice","findByType","find","serialize","resource","model","storage","map","action","reaction","debounce","filter","stringify","canAddNote","canAddClock","canAddQuote","canAddEmoji","displayedWidgets","ReactDOM","render","StrictMode","getElementById"],"mappings":"8LAGaA,EAAgBC,wBAAkC,MAElDC,EAAY,WACvB,IAAMC,EAASC,qBAAWJ,GAE1B,IAAKG,EACH,MAAM,IAAIE,MAAM,oBAGlB,OAAOF,G,OCiBMG,eAzBF,WACX,IAAMH,EAASD,IAEf,OACE,mCACE,0BACEK,MAAO,CACLC,gBAAiB,UACjBC,WAAY,UACZC,MAAO,UACPC,OAAQ,EACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,QAAS,GACTC,OAAQ,EACRC,QAAS,GAEXC,MAAOf,EAAOgB,QAAQC,KACtBC,SAAU,SAACC,GAAD,OAAWnB,EAAOoB,eAAeD,EAAME,cAAcN,eCsBxDZ,eA/BD,WACZ,IAJmBmB,EAIbtB,EAASD,IACTwB,EAAQvB,EAAOgB,QAAQC,KACvBO,GANaF,EAMSC,EAAMD,eALjCG,KAAKC,MAAQJ,GAAiB,IAAQ,IAuBvC,OAhBAK,qBAAU,WACJH,GAbNI,MAAM,kCAAkCC,MAAK,SAACC,GAAD,OAC3CA,EAASC,GAAKD,EAASE,OAASC,QAAQC,YAcnCL,MAAK,YAA0B,IAAvBb,EAAsB,EAAtBA,QAASmB,EAAa,EAAbA,OAChBnC,EAAOoB,eAAe,CACpBe,SACAnB,UACAM,cAAeG,KAAKC,WAGvBU,OAAM,WACLC,QAAQC,KAAK,+BAGlB,CAACd,KAECD,EAAMP,SAAWQ,EAAgB,wBAGpC,sBAAKpB,MAAO,CAAEM,MAAO,MAAOG,OAAQ,QAApC,UACE,kCAAKU,EAAMP,QAAX,OACA,mCAAMO,EAAMY,gB,OCzBHI,EAbK,SAACC,EAAsBC,GACzC,IAAMC,EAAgBC,iBAAOH,GAE7Bb,qBAAU,WACRe,EAAcE,QAAUJ,IACvB,CAACA,IAEJb,qBAAU,WACR,IAAMkB,EAAKC,YAAYJ,EAAcE,QAASH,GAC9C,OAAO,kBAAMM,cAAcF,MAC1B,CAACJ,KCTAO,EAAQ,QACRC,EAAiB,CACrBC,QAAS,QACTC,IAAK,UACLC,KAAM,UACNC,MAAO,QACPC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAGJC,EAAY,WAA8B,IAA7BC,EAA4B,uDAAf,IAAIjC,KAC5BkC,EAAaD,EAAKE,eAAeZ,EAAOC,GACxCY,EAAQF,EAAWG,YAAY,KAErC,MAAO,CACLJ,KAAMC,EAAWI,UAAU,EAAGF,GAC9BG,KAAML,EAAWI,UAAUF,EAAQ,GAAGI,SAiB3BC,EAbD,WAAO,IAAD,EACoBC,oBAAS,kBAAMV,OADnC,0BACTC,EADS,EACTA,KAAMM,EADG,EACHA,KAAQI,EADL,KAKlB,OAFA7B,GAAY,kBAAM6B,EAAYX,OAAc,KAG1C,gCACE,qBAAKY,UAAU,OAAf,SAAuBX,IACvB,qBAAKW,UAAU,OAAf,SAAuBL,QC9BvBM,EAASC,MAAMC,KAAK,oMAEpBC,EAAiB,kBAAMH,EAAOI,KAAKC,MAAMD,KAAKE,SAAWN,EAAOO,UCIhEC,EACJ,CACEC,KAAMC,EACNzD,MAAO0D,EACPC,MAAOhB,EACPiB,MDPU,WAAO,IAAD,EACQhB,mBAASM,GADjB,mBACXU,EADW,KACJC,EADI,KAGlB,OACE,qBACEC,QAAS,kBAAMD,EAASX,IACxBrE,MAAO,CACLkF,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ7E,OAAQ,OACR8E,OAAQ,UACRC,SAAU,GACVC,WAAY,QAThB,SAYE,6BAAKR,QCEIhF,eARO,WACpB,IAAMH,EAASD,IAET6F,EAAYd,EAAmB9E,EAAOgB,QAAQ6E,MAEpD,OAAO,qBAAKxB,UAAU,mBAAf,SAAkC,cAACuB,EAAD,S,iBCVrCE,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUV,EAAb,EAAaA,QAAS9E,EAAtB,EAAsBA,MAAtB,OACnB,qBACE8D,UAAS,iCAA4B9D,GACrCyF,YAAa,SAACC,GAAD,OAAOA,EAAEC,mBACtBb,QAASA,EAHX,SAKE,8BAAMU,OA8DK5F,eA1DM,WACnB,IAAMH,EAASD,IADU,EAESoE,mBAAS,GAFlB,mBAElBgC,EAFkB,KAEPC,EAFO,KAInBC,EAAO,gBAAYrG,EAAO6C,IA6BhC,OACE,sBAAKwB,UAAU,kBAAf,UACE,cAAC,IAAD,CACExB,GAAIwD,EACJhC,UAAU,iBACVtD,MAAOf,EAAOgB,QAAQsF,MACtBN,YAjCyD,SAAC7E,GAAW,IAAD,GACpE,UAAAoF,SAASC,qBAAT,eAAwB3D,MAAOwD,GACjClF,EAAM+E,kBACNE,EAAa,KAEbjF,EAAMsF,iBACNL,EAAa3E,KAAKC,SA4BhBgF,UAxBuD,SAACvF,GACxDgF,GAAa1E,KAAKC,MAAQyE,EAAY,KACxChF,EAAME,cAAcsF,SAuBlBzF,SAZuD,SAACC,GAC5DnB,EAAO4G,gBAAgBzF,EAAME,cAAcN,QAYvC8F,OApBoD,SAAC1F,GACzD,IAAKA,EAAME,cAAcN,MAAO,CAAC,IACvB8E,EAAS7F,EAAOgB,QAAhB6E,KACR7F,EAAO4G,gBAAP,UAA0Bf,EAAK,GAAGiB,eAAlC,OAAkDjB,EAAKkB,MAAM,OAkB3DC,UAAW,GACXC,SAAkC,SAAxBjH,EAAOgB,QAAQ6E,OAE3B,sBAAKxB,UAAU,2BAAf,UACE,cAAC,EAAD,CAAc9D,MAAM,QAAQ8E,QAASrF,EAAOkH,iBAA5C,oBAGA,cAAC,EAAD,CAAc3G,MAAM,MAAM8E,QAASrF,EAAOmH,OAA1C,2BCrEFC,EAAU,iBAAO,CACrB1G,MAAO2G,OAAOC,WACd3G,OAAQ0G,OAAOE,cAGXC,EAAc1H,wBAAcsH,KAErBK,EAAyB,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EAClB5B,mBAASiD,GADS,mBAC/CM,EAD+C,KACnCC,EADmC,KAStD,OANAhG,qBAAU,WACR,IAAMiG,EAAW,kBAAMD,EAAcP,IAErC,OADAC,OAAOQ,iBAAiB,SAAUD,GAC3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IAGD,cAACJ,EAAYO,SAAb,CAAsBhH,MAAO2G,EAA7B,SAA0C3B,K,yBC6D/B5F,eArEe,SAAC,GAAkB,IAAhB4F,EAAe,EAAfA,SACzB/F,EAASD,IAEPiI,EAAmBhI,EAAnBgI,SAAUC,EAASjI,EAATiI,KAEZC,EAAUvF,iBAAuB,MACjC+E,EDMqBzH,qBAAWuH,GCJtC7F,qBAAU,WACR,IAAMwG,EACJF,EAAKG,EAAIV,EAAWhH,MAAQsH,EAASG,EACjCzD,KAAK2D,IAAI,EAAGX,EAAWhH,MAAQuH,EAAKG,GACpCJ,EAASG,EACTG,EACJL,EAAKM,EAAIb,EAAW/G,OAASqH,EAASM,EAClC5D,KAAK2D,IAAI,EAAGX,EAAW/G,OAASsH,EAAKG,GACrCJ,EAASM,EACTF,EAAID,EACNF,EAAKG,EACL1D,KAAK2D,IAtBK,IAsBU3D,KAAK8D,IAAIP,EAAKG,EAAGV,EAAWhH,MAAQyH,IACtDI,EAAID,EACNL,EAAKM,EACL7D,KAAK2D,IAxBM,IAwBU3D,KAAK8D,IAAIP,EAAKM,EAAGb,EAAW/G,OAAS2H,IAE9DtI,EAAOyI,QAAQL,EAAGG,GAClBvI,EAAO0I,YAAYP,EAAGG,KACrB,CAACZ,IAEJ,IAOMiB,EAAO3I,EAAO4I,aAA0B,CAAET,EAAG,EAAGG,EAAG,GAAtBN,EAC7Ba,EAAO7I,EAAO4I,aAEhB,CAAER,EAAGV,EAAWhH,MAAO6H,EAAGb,EAAW/G,QADrCsH,EAGJ,OACE,cAAC,IAAD,CACEa,OAAO,OACPC,OAAO,mBACPb,QAASA,EACTc,OAAQ,SAACC,EAAD,OAAMd,EAAN,EAAMA,EAAGG,EAAT,EAASA,EAAT,OAAiBtI,EAAO0I,YAAYP,EAAGG,IAC/CtC,YAAahG,EAAOkJ,UACpBlB,SAAUW,EACV1B,SAAUjH,EAAO4I,aAPnB,SASE,qBAAKO,IAAKjB,EAAV,SACE,cAAC,YAAD,CACExH,MAAOmI,EAAIT,EACXzH,OAAQkI,EAAIN,EACZa,eAAgB,CAzDR,IACC,KAyDTxB,SA3BwC,SAACyB,EAAD,GAAuB,IAAZpB,EAAW,EAAXA,KACzDjI,EAAOyI,QACL/D,KAAK8D,IAAIP,EAAKvH,MAAOgH,EAAWhH,MAAQsH,EAASG,GACjDzD,KAAK8D,IAAIP,EAAKtH,OAAQ+G,EAAW/G,OAASqH,EAASM,KAoBjD,SAME,qBACEjE,UAAS,mBAAcrE,EAAO4I,aAAe,OAAS,IACtDxI,MAAO,CAAEM,MAAOmI,EAAIT,EAAGzH,OAAQkI,EAAIN,GAFrC,SAIGxC,aCnDE5F,eATA,SAAC,GAAD,IAAGH,EAAH,EAAGA,OAAH,OACb,cAACH,EAAckI,SAAf,CAAwBhH,MAAOf,EAA/B,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,Y,qCCZesJ,E,WAUnB,WAAYC,EAAoBtI,GAAuB,IAAD,gCATtD4B,QASsD,OARtDmF,cAQsD,OAPtDC,UAOsD,OANtDjH,aAMsD,OALtDwI,mBAKsD,OAJtDZ,kBAIsD,OAF9CW,WAE8C,OAYtDb,YAAc,SAACP,EAAWG,GACxB,EAAKN,SAASG,EAAIA,EAClB,EAAKH,SAASM,EAAIA,GAdkC,KAiBtDG,QAAU,SAACL,EAAWG,GACpB,EAAKN,KAAKG,EAAIA,EACd,EAAKH,KAAKM,EAAIA,GAnBsC,KAsBtDnH,eAAiB,SAACH,GAChB,EAAKD,QAAQC,KAAOA,GAvBgC,KA0BtD2F,gBAAkB,SAACN,GACjB,EAAKtF,QAAQsF,MAAQA,GA3B+B,KA8BtD4C,UAAY,WACV,EAAKK,MAAME,gBAAgB,EAAK5G,KA/BoB,KAkCtDqE,iBAAmB,WACjB,EAAK0B,cAAgB,EAAKA,cAnC0B,KAsCtDzB,OAAS,WACH,EAAKuC,iBACP,EAAKF,eAAgB,EAIvB,EAAKD,MAAMI,aAAa,EAAK9G,KA5CuB,KA+CtD+G,QAAU,WACR,EAAKV,YACL,EAAKM,eAAgB,GAjD+B,KAoDtDK,OAAS,iBAAuB,CAC9BhH,GAAI,EAAKA,GACTmF,SAAU,EAAKA,SACfC,KAAM,EAAKA,KACXjH,QAAS,EAAKA,QACdwI,cAAe,EAAKA,cACpBZ,aAAc,EAAKA,eAzDnBkB,KAAKjH,GAAK5B,EAAK4B,GACfiH,KAAK9B,SAAW/G,EAAK+G,SACrB8B,KAAK7B,KAAOhH,EAAKgH,KACjB6B,KAAK9I,QAAUC,EAAKD,QACpB8I,KAAKN,cAAgBvI,EAAKuI,cAC1BM,KAAKlB,eAAiB3H,EAAK2H,aAC3BkB,KAAKP,MAAQA,EAEbQ,YAAmBD,M,kDAoDrB,WACE,MAAO,CAAC,QAAS,QAAS,SAASE,SAASF,KAAK9I,QAAQ6E,U,KAxExCyD,EA2EZvE,KAAO,SAACwE,GACb,OAAO,IA5EUD,EA4EDC,EAAT,2BA5EUD,EA6EPW,YADH,IAELjJ,QAAS,CAAE6E,KAAM,OAAQS,MAAO,WAAYrF,KAAM,QA9EnCqI,EAkFZ/H,MAAQ,SAACgI,GACd,OAAO,IAnFUD,EAmFDC,EAAT,2BAnFUD,EAoFPW,YADH,IAELjJ,QAAS,CACP6E,KAAM,QACNS,MAAO,QACPrF,KAAM,CAAEkB,OAAQ,GAAInB,QAAS,GAAIM,cAAe,YAxFnCgI,EA6FZpE,MAAQ,SAACqE,GACd,OAAO,IA9FUD,EA8FDC,EAAT,2BA9FUD,EA+FPW,YADH,IAELjJ,QAAS,CAAE6E,KAAM,QAASS,MAAO,QAASrF,KAAM,UAhGjCqI,EAoGZnE,MAAQ,SAACoE,GACd,OAAO,IArGUD,EAqGDC,EAAT,2BArGUD,EAsGPW,YADH,IAELjJ,QAAS,CAAE6E,KAAM,QAASS,MAAO,QAASrF,KAAM,UAvGjCqI,EA2GJW,SAAW,iBAAO,CAC/BpH,GAAIqH,cACJjC,KAAM,CAAEG,EAAG,IAAKG,EAAG,KACnBP,SAAU,CAAEG,EAAG,GAAIG,EAAG,IACtBkB,eAAe,ICjHnB,IAAMW,EAAc,kBA8BL,M,iDA3BbC,WAAa,WACX,IACE,OAAOC,KAAKC,MACVC,aAAaC,QAAQL,IAAgB,MAEvC,MAAOlE,GAEP,OADA5D,QAAQC,KAAK,iCACN,K,KAIXmI,WAAa,SAACxJ,GACZ,IACEsJ,aAAaG,QAAQP,EAAalJ,GAClCoB,QAAQsI,IAAI,kBACZ,MAAO1E,M,KAGX2E,OAAS,SAACpI,GACR6E,OAAOQ,iBAAiB,WAAW,SAAC1G,GAC9BA,EAAM0J,MAAQV,GAChB3H,EAAS,EAAK4H,mB,iBCtBhBU,EAAc,I,WCIlB,aAAe,IAAD,gCAFdC,aAEc,OAkBdC,QAAU,WACR,EAAKC,OAAO,SAnBA,KAsBdC,SAAW,WACT,EAAKC,gBAAgB,UAvBT,KA0BdC,SAAW,WACT,EAAKD,gBAAgB,UA3BT,KA8BdE,SAAW,WACT,EAAKF,gBAAgB,UA/BT,KAkCd1B,gBAAkB,SAAC5G,GACjB,IAAMyI,EAAQ,EAAKC,UAAU1I,GACzByI,GAAS,GACX,EAAKP,QAAQS,KAAK,EAAKT,QAAQU,OAAOH,EAAO,GAAG,KArCtC,KAyCd3B,aAAe,SAAC9G,GACd,IAAMyI,EAAQ,EAAKC,UAAU1I,GACzByI,GAAS,GACX,EAAKP,QAAQU,OAAOH,EAAO,IA5CjB,KAgDdC,UAAY,SAAC1I,GACX,OAAO,EAAKkI,QAAQQ,WAAU,SAACvL,GAAD,OAAYA,EAAO6C,KAAOA,MAjD5C,KAoDd6I,WAAa,SAAC7F,GACZ,OAAO,EAAKkF,QAAQY,MAAK,SAAC3L,GAAD,OAAYA,EAAOgB,QAAQ6E,OAASA,MArDjD,KAsFN+F,UAAY,SAACC,GAAD,OAClB,IAAIvC,EAAY,EAAMuC,IAvFV,KAyFNV,gBAAkB,SAACtF,GACzB,IAAMiG,EAAQ,EAAKJ,WAAW7F,GAC1BiG,GAASA,EAAMtC,cACjBsC,EAAMlC,UAIR,EAAKqB,OAAOpF,IAhGA,KAmGNoF,OAAS,SAACpF,GAChB,EAAKkF,QAAQS,KAAKlC,EAAYzD,GAAM,KAnGpCkE,YAAmBD,MAEnBA,KAAKiB,QAAUgB,EAAQ3B,aAAa4B,IAAIlC,KAAK8B,WAE7CG,EAAQnB,OACNqB,aAAO,SAAClB,GACN,EAAKA,QAAUA,EAAQiB,IAAI,EAAKJ,eAIpCM,aAAS,kBAAM,EAAKlK,OAAMmK,IAASJ,EAAQtB,WAAY,O,kDAGzD,WACE,OAAOX,KAAKiB,QAAQqB,QAAO,SAACpM,GAAD,OAAaA,EAAOwJ,mB,sBAyCjD,WAKE,OAJoBM,KAAKiB,QAAQqB,QAC/B,SAACpM,GAAD,MAAoC,SAAxBA,EAAOgB,QAAQ6E,QAGVhB,OAAS,I,uBAG9B,WACE,IAAMtD,EAAQuI,KAAK4B,WAAW,SAE9B,OAAQnK,GAASA,EAAMiI,gB,uBAGzB,WACE,IAAMtE,EAAQ4E,KAAK4B,WAAW,SAE9B,OAAQxG,GAASA,EAAMsE,gB,uBAGzB,WACE,IAAMrE,EAAQ2E,KAAK4B,WAAW,SAE9B,OAAQvG,GAASA,EAAMqE,gB,gBAGzB,WACE,OAAOa,KAAKgC,UAAUvC,KAAKiB,a,MDtDhB5K,mBA/Bf,WACE,OACE,sBAAKkE,UAAU,MAAf,UACE,wBAAQgB,QAASyF,EAAYE,QAAS/D,UAAW6D,EAAYwB,WAA7D,kBAGA,wBACEjH,QAASyF,EAAYM,SACrBnE,UAAW6D,EAAYyB,YAFzB,mBAMA,wBACElH,QAASyF,EAAYI,SACrBjE,UAAW6D,EAAY0B,YAFzB,mBAMA,wBACEnH,QAASyF,EAAYO,SACrBpE,UAAW6D,EAAY2B,YAFzB,mBAMC3B,EAAY4B,iBAAiBV,KAAI,SAAChM,GAAD,OAChC,cAAC,EAAD,CAAwBA,OAAQA,GAAnBA,EAAO6C,aEzB5B8J,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJtG,SAASuG,eAAe,W","file":"static/js/main.5ae80520.chunk.js","sourcesContent":["import WidgetModel, { WidgetContent } from 'data/widgetModel';\nimport { createContext, useContext } from 'react';\n\nexport const WidgetContext = createContext<WidgetModel | null>(null);\n\nexport const useWidget = <T extends WidgetContent = WidgetContent>() => {\n  const widget = useContext(WidgetContext);\n\n  if (!widget) {\n    throw new Error('Widget not found');\n  }\n\n  return widget as WidgetModel<T>;\n}","import { useWidget } from 'context/widget';\nimport type { Note as NoteContent } from 'data/widgetModel';\nimport { observer } from 'mobx-react';\n\nconst Note = () => {\n  const widget = useWidget<NoteContent>();\n\n  return (\n    <>\n      <textarea\n        style={{\n          backgroundColor: 'inherit',\n          fontFamily: 'inherit',\n          color: 'inherit',\n          border: 0,\n          resize: 'none',\n          width: '100%',\n          height: '100%',\n          padding: 16,\n          margin: 0,\n          outline: 0,\n        }}\n        value={widget.content.data}\n        onChange={(event) => widget.setContentData(event.currentTarget.value)}\n      />\n    </>\n  );\n};\n\nexport default observer(Note);\n","import { observer } from 'mobx-react';\nimport { useEffect } from 'react';\n\nimport type { Quote as QuoteContent } from 'data/widgetModel';\nimport { useWidget } from 'context/widget';\n\nconst fetchQuote = () =>\n  fetch('https://api.quotable.io/random').then((response) =>\n    response.ok ? response.json() : Promise.reject()\n  );\n\nconst shouldFetch = (lastRequested: number) =>\n  (Date.now() - lastRequested) / 60000 > 60;\n\nconst Quote = () => {\n  const widget = useWidget<QuoteContent>();\n  const quote = widget.content.data;\n  const isStale = shouldFetch(quote.lastRequested);\n\n  useEffect(() => {\n    if (isStale) {\n      fetchQuote()\n        .then(({ content, author }) => {\n          widget.setContentData({\n            author,\n            content,\n            lastRequested: Date.now(),\n          });\n        })\n        .catch(() => {\n          console.warn('Failed to fetch quote!');\n        });\n    }\n  }, [isStale]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (!quote.content || isStale) return <div />;\n\n  return (\n    <div style={{ width: '80%', margin: 'auto' }}>\n      <p>\"{quote.content}\"</p>\n      <p>- {quote.author}</p>\n    </div>\n  );\n};\n\nexport default observer(Quote);\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback: () => void, delay: number) => {\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const id = setInterval(savedCallback.current, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n};\n\nexport default useInterval;","import { useState } from 'react';\nimport useInterval from 'hooks/useInterval';\n\nconst EN_US = 'en-US';\nconst FORMAT_OPTIONS = {\n  weekday: 'short',\n  day: 'numeric',\n  year: 'numeric',\n  month: 'short',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric',\n} as const;\n\nconst parseDate = (date: Date = new Date()) => {\n  const dateString = date.toLocaleString(EN_US, FORMAT_OPTIONS);\n  const split = dateString.lastIndexOf(',');\n\n  return {\n    date: dateString.substring(0, split),\n    time: dateString.substring(split + 1).trim(),\n  };\n};\n\nconst Clock = () => {\n  const [{ date, time }, setDatetime] = useState(() => parseDate());\n\n  useInterval(() => setDatetime(parseDate()), 1000);\n\n  return (\n    <div>\n      <div className='date'>{date}</div>\n      <div className='time'>{time}</div>\n    </div>\n  );\n};\n\nexport default Clock;\n","import { useState } from 'react';\n\nconst EMOJIS = Array.from('😎🤠🤘😺😊😁🤖😌🤙👊🙋💆🌞🌝💫🚀');\n\nconst getRandomEmoji = () => EMOJIS[Math.floor(Math.random() * EMOJIS.length)];\n\nconst Emoji = () => {\n  const [emoji, setEmoji] = useState(getRandomEmoji);\n\n  return (\n    <div\n      onClick={() => setEmoji(getRandomEmoji)}\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        cursor: 'pointer',\n        fontSize: 32,\n        userSelect: 'none',\n      }}\n    >\n      <h1>{emoji}</h1>\n    </div>\n  );\n};\n\nexport default Emoji;\n","import { useWidget } from 'context/widget';\nimport { WidgetContent as WidgetContentType } from 'data/widgetModel';\nimport { observer } from 'mobx-react';\nimport Note from './note';\nimport Quote from './quote';\nimport Clock from './clock';\nimport Emoji from './emoji';\n\nconst WIDGET_CONTENT_MAP: { [key in WidgetContentType['type']]: () => JSX.Element } =\n  {\n    note: Note,\n    quote: Quote,\n    clock: Clock,\n    emoji: Emoji,\n  };\n\nconst WidgetContent = () => {\n  const widget = useWidget();\n\n  const Component = WIDGET_CONTENT_MAP[widget.content.type];\n\n  return <div className='drag-box_content'><Component /></div>;\n};\n\nexport default observer(WidgetContent);\n","import { useWidget } from 'context/widget';\nimport { observer } from 'mobx-react';\nimport React, { useState } from 'react';\nimport AutosizeInput from 'react-input-autosize';\n\ninterface HeaderButtonProps {\n  children: React.ReactNode;\n  onClick: React.MouseEventHandler;\n  color: 'red' | 'green';\n}\n\nconst HeaderButton = ({ children, onClick, color }: HeaderButtonProps) => (\n  <div\n    className={`drag-box_header-button ${color}`}\n    onMouseDown={(e) => e.stopPropagation()}\n    onClick={onClick}\n  >\n    <div>{children}</div>\n  </div>\n);\n\nconst WidgetHeader = () => {\n  const widget = useWidget();\n  const [mouseDown, setMouseDown] = useState(0);\n\n  const inputId = `title_${widget.id}`;\n\n  const onMouseDown: React.MouseEventHandler<HTMLInputElement> = (event) => {\n    if (document.activeElement?.id === inputId) {\n      event.stopPropagation();\n      setMouseDown(0);\n    } else {\n      event.preventDefault();\n      setMouseDown(Date.now());\n    }\n  };\n\n  const onMouseUp: React.MouseEventHandler<HTMLInputElement> = (event) => {\n    if (mouseDown && Date.now() - mouseDown < 200) {\n      event.currentTarget.focus();\n    }\n  };\n\n  const onBlur: React.FocusEventHandler<HTMLInputElement> = (event) => {\n    if (!event.currentTarget.value) {\n      const { type } = widget.content;\n      widget.setContentTitle(`${type[0].toUpperCase()}${type.slice(1)}`);\n    }\n  };\n\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    widget.setContentTitle(event.currentTarget.value);\n  };\n\n  return (\n    <div className='drag-box_header'>\n      <AutosizeInput\n        id={inputId}\n        className='drag-box_title'\n        value={widget.content.title}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onChange={onChange}\n        onBlur={onBlur}\n        maxLength={28}\n        disabled={widget.content.type !== 'note'}\n      />\n      <div className='drag-box_header-controls'>\n        <HeaderButton color='green' onClick={widget.toggleFullScreen}>\n          &harr;\n        </HeaderButton>\n        <HeaderButton color='red' onClick={widget.delete}>\n          &times;\n        </HeaderButton>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(WidgetHeader);\n","import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst getSize = () => ({\n  width: window.innerWidth,\n  height: window.innerHeight,\n});\n\nconst SizeContext = createContext(getSize());\n\nexport const SizeProvider: React.FC = ({ children }) => {\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    const onResize = () => setWindowSize(getSize);\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return (\n    <SizeContext.Provider value={windowSize}>{children}</SizeContext.Provider>\n  );\n};\n\nexport const useSize = () => useContext(SizeContext);\n","import React, { useEffect, useRef } from 'react';\nimport { observer } from 'mobx-react';\n\nimport { useSize } from 'context/size';\nimport { Resizable, ResizableBoxProps } from 'react-resizable';\nimport Draggable from 'react-draggable';\nimport { useWidget } from 'context/widget';\n\nconst MIN_WIDTH = 200;\nconst MIN_HEIGHT = 150;\n\nconst WidgetFrame: React.FC = ({ children }) => {\n  const widget = useWidget();\n\n  const { position, size } = widget;\n\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const windowSize = useSize();\n\n  useEffect(() => {\n    const x =\n      size.w > windowSize.width - position.x\n        ? Math.max(0, windowSize.width - size.w)\n        : position.x;\n    const y =\n      size.h > windowSize.height - position.y\n        ? Math.max(0, windowSize.height - size.w)\n        : position.y;\n    const w = x\n      ? size.w\n      : Math.max(MIN_WIDTH, Math.min(size.w, windowSize.width - x));\n    const h = y\n      ? size.h\n      : Math.max(MIN_HEIGHT, Math.min(size.h, windowSize.height - y));\n\n    widget.setSize(w, h);\n    widget.setPosition(x, y);\n  }, [windowSize]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onResize: ResizableBoxProps['onResize'] = (_event, { size }) => {\n    widget.setSize(\n      Math.min(size.width, windowSize.width - position.x),\n      Math.min(size.height, windowSize.height - position.y)\n    );\n  };\n\n  const pos = !widget.isFullScreen ? position : { x: 0, y: 0 };\n  const dim = !widget.isFullScreen\n    ? size\n    : { w: windowSize.width, h: windowSize.height };\n\n  return (\n    <Draggable\n      bounds='body'\n      handle='.drag-box_header'\n      nodeRef={nodeRef}\n      onDrag={(_, { x, y }) => widget.setPosition(x, y)}\n      onMouseDown={widget.setActive}\n      position={pos}\n      disabled={widget.isFullScreen}\n    >\n      <div ref={nodeRef}>\n        <Resizable\n          width={dim.w}\n          height={dim.h}\n          minConstraints={[MIN_WIDTH, MIN_HEIGHT]}\n          onResize={onResize}\n        >\n          <div\n            className={`drag-box ${widget.isFullScreen ? 'full' : ''}`}\n            style={{ width: dim.w, height: dim.h }}\n          >\n            {children}\n          </div>\n        </Resizable>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default observer(WidgetFrame);\n","import { observer } from 'mobx-react';\n\nimport type WidgetModel from 'data/widgetModel';\nimport WidgetContent from './components/content';\nimport WidgetHeader from './components/header';\nimport WidgetFrame from './components/frame';\nimport { WidgetContext } from 'context/widget';\n\ninterface WidgetProps {\n  widget: WidgetModel;\n}\n\nconst Widget = ({ widget }: WidgetProps) => (\n  <WidgetContext.Provider value={widget}>\n    <WidgetFrame>\n      <WidgetHeader />\n      <WidgetContent />\n    </WidgetFrame>\n  </WidgetContext.Provider>\n);\n\nexport default observer(Widget);\n","import { makeAutoObservable } from 'mobx';\nimport { v4 } from 'uuid';\nimport type WidgetStore from './widgetStore';\n\nexport default class WidgetModel<T extends WidgetContent = WidgetContent> {\n  id: string;\n  position: { x: number; y: number };\n  size: { w: number; h: number };\n  content: T;\n  isSoftDeleted: boolean;\n  isFullScreen: boolean;\n\n  private store: WidgetStore;\n\n  constructor(store: WidgetStore, data: WidgetResource) {\n    this.id = data.id;\n    this.position = data.position;\n    this.size = data.size;\n    this.content = data.content as T;\n    this.isSoftDeleted = data.isSoftDeleted;\n    this.isFullScreen = !!data.isFullScreen;\n    this.store = store;\n\n    makeAutoObservable(this);\n  }\n\n  setPosition = (x: number, y: number) => {\n    this.position.x = x;\n    this.position.y = y;\n  };\n\n  setSize = (w: number, h: number) => {\n    this.size.w = w;\n    this.size.h = h;\n  };\n\n  setContentData = (data: WidgetContent['data']) => {\n    this.content.data = data;\n  };\n\n  setContentTitle = (title: string) => {\n    this.content.title = title;\n  };\n\n  setActive = () => {\n    this.store.setActiveWidget(this.id);\n  };\n\n  toggleFullScreen = () => {\n    this.isFullScreen = !this.isFullScreen;\n  };\n\n  delete = () => {\n    if (this.shouldSoftDelete) {\n      this.isSoftDeleted = true;\n      return;\n    }\n\n    this.store.removeWidget(this.id);\n  };\n\n  restore = () => {\n    this.setActive();\n    this.isSoftDeleted = false;\n  };\n\n  toJSON = (): WidgetResource => ({\n    id: this.id,\n    position: this.position,\n    size: this.size,\n    content: this.content,\n    isSoftDeleted: this.isSoftDeleted,\n    isFullScreen: this.isFullScreen,\n  });\n\n  get shouldSoftDelete() {\n    return ['clock', 'quote', 'emoji'].includes(this.content.type);\n  }\n\n  static note = (store: WidgetStore) => {\n    return new this(store, {\n      ...this.defaults(),\n      content: { type: 'note', title: 'New Note', data: '' },\n    });\n  };\n\n  static quote = (store: WidgetStore) => {\n    return new this(store, {\n      ...this.defaults(),\n      content: {\n        type: 'quote',\n        title: 'Quote',\n        data: { author: '', content: '', lastRequested: 1500000000000 },\n      },\n    });\n  };\n\n  static clock = (store: WidgetStore) => {\n    return new this(store, {\n      ...this.defaults(),\n      content: { type: 'clock', title: 'Clock', data: null },\n    });\n  };\n\n  static emoji = (store: WidgetStore) => {\n    return new this(store, {\n      ...this.defaults(),\n      content: { type: 'emoji', title: 'Emoji', data: null },\n    });\n  };\n\n  private static defaults = () => ({\n    id: v4(),\n    size: { w: 350, h: 350 },\n    position: { x: 10, y: 10 },\n    isSoftDeleted: false,\n  });\n}\n\nexport interface Note {\n  type: 'note';\n  title: string;\n  data: string;\n}\n\nexport interface Clock {\n  type: 'clock';\n  title: 'Clock';\n  data: null;\n}\n\nexport interface Quote {\n  type: 'quote';\n  title: 'Quote';\n  data: {\n    lastRequested: number;\n    content: string;\n    author: string;\n  };\n}\n\nexport interface Emoji {\n  type: 'emoji';\n  title: 'Emoji';\n  data: null;\n}\n\nexport type WidgetContent = Note | Clock | Quote | Emoji;\n\nexport interface WidgetResource {\n  id: string;\n  position: { x: number; y: number };\n  size: { w: number; h: number };\n  content: WidgetContent;\n  isSoftDeleted: boolean;\n  isFullScreen?: boolean;\n}\n","import type { WidgetResource } from 'data/widgetModel';\n\nconst STORAGE_KEY = '__tabOS_widgets';\n\nclass Storage {\n  getWidgets = () => {\n    try {\n      return JSON.parse(\n        localStorage.getItem(STORAGE_KEY) || '[]'\n      ) as WidgetResource[];\n    } catch (e) {\n      console.warn('Error fetching stored widgets');\n      return [];\n    }\n  };\n\n  setWidgets = (data: string) => {\n    try {\n      localStorage.setItem(STORAGE_KEY, data);\n      console.log('Widgets saved!');\n    } catch (e) {}\n  };\n\n  listen = (callback: (widgets: WidgetResource[]) => void) => {\n    window.addEventListener('storage', (event) => {\n      if (event.key === STORAGE_KEY) {\n        callback(this.getWidgets());\n      }\n    })\n  }\n}\n\nexport default new Storage();\n","import Widget from 'components/widget';\nimport WidgetStore from 'data/widgetStore';\nimport { observer } from 'mobx-react';\n\nconst widgetStore = new WidgetStore();\n\nfunction App() {\n  return (\n    <div className='app'>\n      <button onClick={widgetStore.addNote} disabled={!widgetStore.canAddNote}>\n        note\n      </button>\n      <button\n        onClick={widgetStore.addClock}\n        disabled={!widgetStore.canAddClock}\n      >\n        clock\n      </button>\n      <button\n        onClick={widgetStore.addQuote}\n        disabled={!widgetStore.canAddQuote}\n      >\n        quote\n      </button>\n      <button\n        onClick={widgetStore.addEmoji}\n        disabled={!widgetStore.canAddEmoji}\n      >\n        emoji\n      </button>\n      {widgetStore.displayedWidgets.map((widget) => (\n        <Widget key={widget.id} widget={widget} />\n      ))}\n    </div>\n  );\n}\n\nexport default observer(App);\n","import { action, makeAutoObservable, reaction } from 'mobx';\nimport WidgetModel, { WidgetResource } from './widgetModel';\nimport storage from 'utils/storage';\nimport debounce from 'lodash.debounce';\n\nexport default class WidgetStore {\n  widgets: WidgetModel[];\n\n  constructor() {\n    makeAutoObservable(this);\n\n    this.widgets = storage.getWidgets().map(this.serialize);\n\n    storage.listen(\n      action((widgets) => {\n        this.widgets = widgets.map(this.serialize);\n      })\n    );\n\n    reaction(() => this.json, debounce(storage.setWidgets, 1500));\n  }\n\n  get displayedWidgets() {\n    return this.widgets.filter((widget) => !widget.isSoftDeleted);\n  }\n\n  addNote = () => {\n    this.addNew('note');\n  };\n\n  addQuote = () => {\n    this.restoreOrAddNew('quote');\n  };\n\n  addClock = () => {\n    this.restoreOrAddNew('clock');\n  };\n\n  addEmoji = () => {\n    this.restoreOrAddNew('emoji');\n  }\n\n  setActiveWidget = (id: string) => {\n    const index = this.findIndex(id);\n    if (index > -1) {\n      this.widgets.push(this.widgets.splice(index, 1)[0]);\n    }\n  };\n\n  removeWidget = (id: string) => {\n    const index = this.findIndex(id);\n    if (index > -1) {\n      this.widgets.splice(index, 1);\n    }\n  };\n\n  findIndex = (id: string) => {\n    return this.widgets.findIndex((widget) => widget.id === id);\n  };\n\n  findByType = (type: WidgetModel['content']['type']) => {\n    return this.widgets.find((widget) => widget.content.type === type);\n  };\n\n  get canAddNote() {\n    const noteWidgets = this.widgets.filter(\n      (widget) => widget.content.type === 'note'\n    );\n\n    return noteWidgets.length < 3;\n  }\n\n  get canAddQuote() {\n    const quote = this.findByType('quote');\n\n    return !quote || quote.isSoftDeleted;\n  }\n\n  get canAddClock() {\n    const clock = this.findByType('clock');\n\n    return !clock || clock.isSoftDeleted;\n  }\n\n  get canAddEmoji() {\n    const emoji = this.findByType('emoji');\n\n    return !emoji || emoji.isSoftDeleted;\n  }\n\n  private get json() {\n    return JSON.stringify(this.widgets);\n  }\n\n  private serialize = (resource: WidgetResource) =>\n    new WidgetModel(this, resource);\n\n  private restoreOrAddNew = (type: WidgetModel['content']['type']) => {\n    const model = this.findByType(type);\n    if (model && model.isSoftDeleted) {\n      model.restore();\n      return;\n    }\n\n    this.addNew(type);\n  };\n\n  private addNew = (type: WidgetModel['content']['type']) => {\n    this.widgets.push(WidgetModel[type](this));\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport { SizeProvider } from './context/size';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SizeProvider>\n      <App />\n    </SizeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}